from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from handlers import main_router
from core import settings
from core.midd import RegisterUserMiddleware

from infrastructure.fs_broker.broker import broker

# import asyncio
import logging

logger = logging.getLogger(__name__)

storage = MemoryStorage()


async def main_bot():
    bot = Bot(
        token=settings.bot.token,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML),
    )

    dp = Dispatcher(storage=storage)
    dp.include_router(main_router())
    dp.message.middleware(RegisterUserMiddleware())

    # # –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ–±–∏–¥–≤–∞ –≤ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö —Ç–∞—Å–∫–∞—Ö
    # bot_task = asyncio.create_task(dp.start_polling(bot))
    # fs_task = asyncio.create_task(app.run())
    #
    # # –ß–µ–∫–∞—î–º–æ –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –±—É–¥—å-—è–∫–æ–≥–æ –∑ –Ω–∏—Ö (–∑–∞–∑–≤–∏—á–∞–π –≤–æ–Ω–∏ –æ–±–∏–¥–≤–∞ –±–µ–∑–∫—ñ–Ω–µ—á–Ω—ñ)
    # await asyncio.gather(bot_task, fs_task)

    await broker.start()
    logging.info("üêá Broker started")
    try:
        await dp.start_polling(bot)
    finally:
        await broker.stop()
        logging.info("üõë Broker stopped")
